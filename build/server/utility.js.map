{"version":3,"sources":["../../src/server/utility.js"],"names":[],"mappings":";;;;;QAAgB,KAAK,GAAL,KAAK;QAIL,QAAQ,GAAR,QAAQ;QAWR,KAAK,GAAL,KAAK;QAiBL,IAAI,GAAJ,IAAI;;AAhCb,SAAS,KAAK,CAAG,GAAG,EAAG;AAC7B,QAAO,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,SAAS,CAAE,GAAG,CAAE,CAAE,CAAC;CAC3C;;AAEM,SAAS,QAAQ,GAAI;AAC3B,KAAI,OAAO,YAAA;KAAE,QAAQ,YAAA;KAAE,QAAQ,YAAA,CAAC;;AAEhC,QAAO,GAAG,IAAI,OAAO,CAAE,UAAW,OAAO,EAAE,MAAM,EAAG;AACnD,UAAQ,GAAG,OAAO,CAAC;AACnB,UAAQ,GAAG,MAAM,CAAC;EAClB,CAAE,CAAC;;AAEJ,QAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC;CACjE;;AAEM,SAAS,KAAK,CAAG,CAAC,EAAE,CAAC,EAAG;AAC9B,KAAI,CAAC,GAAG,KAAK,CAAE,CAAC,CAAE;KACd,CAAC,GAAG,KAAK,CAAE,CAAC,CAAE,CAAC;;AAEnB,OAAM,CAAC,IAAI,CAAE,CAAC,CAAE,CAAC,OAAO,CAAE,UAAW,CAAC,EAAG;AACxC,GAAC,CAAE,CAAC,CAAE,GAAG,CAAC,CAAE,CAAC,CAAE,CAAC;EAChB,CAAE,CAAC;;AAEJ,QAAO,CAAC,CAAC;CACT;;AAED,IAAM,CAAC,GAAG,CAAE,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAE,CAAC;;AAE7B,SAAS,CAAC,GAAI;AACb,QAAO,CAAE,AAAE,CAAE,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA,GAAK,KAAO,GAAK,CAAC,CAAA,CAAG,QAAQ,CAAE,EAAE,CAAE,CAAC,SAAS,CAAE,CAAC,CAAE,CAAC;CACjF;;AAEM,SAAS,IAAI,GAAI;AACvB,QAAS,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,CAAE,IAAI,CAAC,KAAK,CAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAE,CAAE,GAAG,CAAC,EAAE,CAAC,MAAM,CAAE,CAAC,EAAE,CAAC,CAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAG;CACvJ","file":"utility.js","sourcesContent":["export function clone ( arg ) {\n\treturn JSON.parse( JSON.stringify( arg ) );\n}\n\nexport function deferred () {\n\tlet promise, resolver, rejecter;\n\n\tpromise = new Promise( function ( resolve, reject ) {\n\t\tresolver = resolve;\n\t\trejecter = reject;\n\t} );\n\n\treturn { resolve: resolver, reject: rejecter, promise: promise };\n}\n\nexport function merge ( a, b ) {\n\tlet c = clone( a ),\n\t    d = clone( b );\n\n\tObject.keys( d ).forEach( function ( i ) {\n\t\tc[ i ] = d[ i ];\n\t} );\n\n\treturn c;\n}\n\nconst r = [ 8, 9, \"a\", \"b\" ];\n\nfunction s () {\n\treturn ( ( ( 1 + Math.random() ) * 0x10000 ) | 0 ).toString( 16 ).substring( 1 );\n}\n\nexport function uuid () {\n\treturn ( s() + s() + \"-\" + s() + \"-4\" + s().substr( 0, 3 ) + \"-\" + r[ Math.floor( Math.random() * 4 ) ] + s().substr( 0, 3 ) + \"-\" + s() + s() + s() );\n}\n"]}