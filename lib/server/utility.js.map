{"version":3,"sources":["../../src/utility.js"],"names":[],"mappings":"AAAA,YAAY,CAAC;;;;;QAEG,KAAK,GAAL,KAAK;QAIL,QAAQ,GAAR,QAAQ;QAWR,KAAK,GAAL,KAAK;QAiBL,IAAI,GAAJ,IAAI;;AAhCb,SAAS,KAAK,CAAE,GAAG,EAAE;AAC3B,QAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;CACvC;;AAEM,SAAS,QAAQ,GAAI;AAC3B,KAAI,OAAO,YAAA;KAAE,QAAQ,YAAA;KAAE,QAAQ,YAAA,CAAC;;AAEhC,QAAO,GAAG,IAAI,OAAO,CAAC,UAAU,OAAO,EAAE,MAAM,EAAE;AAChD,UAAQ,GAAG,OAAO,CAAC;AACnB,UAAQ,GAAG,MAAM,CAAC;EAClB,CAAC,CAAC;;AAEH,QAAO,EAAC,OAAO,EAAE,QAAQ,EAAE,MAAM,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAC,CAAC;CAC/D;;AAEM,SAAS,KAAK,CAAE,CAAC,EAAE,CAAC,EAAE;AAC5B,KAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;AACjB,KAAI,CAAC,GAAG,KAAK,CAAC,CAAC,CAAC,CAAC;;AAEjB,OAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE;AACnC,GAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;EACZ,CAAC,CAAC;;AAEH,QAAO,CAAC,CAAC;CACT;;AAED,IAAM,CAAC,GAAG,CAAC,CAAC,EAAE,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;;AAE3B,SAAS,CAAC,GAAI;AACb,QAAO,CAAC,AAAC,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAA,GAAI,KAAO,GAAI,CAAC,CAAA,CAAE,QAAQ,CAAC,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;CACvE;;AAEM,SAAS,IAAI,GAAI;AACvB,QAAQ,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,IAAI,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,GAAG,CAAC,EAAE,CAAE;CAC7I","file":"utility.js","sourcesContent":["'use strict';\n\nexport function clone (arg) {\n\treturn JSON.parse(JSON.stringify(arg));\n}\n\nexport function deferred () {\n\tlet promise, resolver, rejecter;\n\n\tpromise = new Promise(function (resolve, reject) {\n\t\tresolver = resolve;\n\t\trejecter = reject;\n\t});\n\n\treturn {resolve: resolver, reject: rejecter, promise: promise};\n}\n\nexport function merge (a, b) {\n\tlet c = clone(a);\n\tlet d = clone(b);\n\n\tObject.keys(d).forEach(function (i) {\n\t\tc[i] = d[i];\n\t});\n\n\treturn c;\n}\n\nconst r = [8, 9, 'a', 'b'];\n\nfunction s () {\n\treturn (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\n}\n\nexport function uuid () {\n\treturn (s() + s() + '-' + s() + '-4' + s().substr(0, 3) + '-' + r[Math.floor(Math.random() * 4)] + s().substr(0, 3) + '-' + s() + s() + s());\n}\n"]}